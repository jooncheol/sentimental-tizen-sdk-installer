#!/usr/bin/env python
"""
Tizen SDK mirroring tool
by JoonCheol Park <jooncheol at gmail dot com>

This library is free software; you can redistribute it and/or
modify it under the terms of the GNU Lesser General Public
License as published by the Free Software Foundation; either
version 2 of the License, or (at your option) any later version.

This library is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
Lesser General Public License for more details.

You should have received a copy of the GNU Lesser General
Public License along with this library; if not, write to the
Free Software Foundation, Inc., 59 Temple Place, Suite 330,
Boston, MA 02111-1307, USA.
"""

import os, sys

# package index url
# for alpha
pi_url='https://source.tizen.org/tizensdkpackages/current/linux-packages/Packages.list'
# for beta linux version
pi_url='http://source.tizen.org/tizensdkpackages/release/pkg_list_linux'
target_dir = '.'

if __name__=='__main__':
    if len(sys.argv)==1:
        print "Usage:"
        print "  %s directory [package index url]" % sys.argv[0]
        print 
        print "default package index url is:"
        print "  "+pi_url
        sys.exit(1)
    else:
        target_dir = sys.argv[1]
        if not os.path.exists(target_dir):
            print '%s is not exists' % target_dir
            sys.exit(1)
        target_dir = os.path.abspath(target_dir)
        if len(sys.argv)>2:
            pi_url = sys.argv[2]

    pkg_index = os.popen("curl -s --insecure "+pi_url).read()
    download_queue = []
    try:
        open(target_dir+os.path.sep+pi_url.split('/')[-1],'w').write(pkg_index)
    except IOError, msg:
        print 'permission denied: create file on '+target_dir
        sys.exit(1)
    for x in pkg_index.split('\n'):
        if not x.startswith("Path"):
            continue
        key, value = x.split(":")
        filename = value.strip()
        if filename.startswith('/'):
            filename = filename[1:]
        pkg_url = pi_url.replace(pi_url.split("/")[-1], filename)
        download_queue.append((pkg_url, filename))
    count = 0
    for pkg_url, filename in download_queue:
        print
        print '[%d/%d] Downloading %s into %s' % \
                (count+1, len(download_queue), pkg_url, target_dir)
        dirname = os.path.dirname(filename)
        if len(dirname)>0:
            os.system("mkdir -p "+target_dir+os.path.sep+dirname)
        cmd = "curl --insecure -o "+target_dir+os.path.sep+filename+" "+pkg_url
        if 0 != os.system(cmd):
            print 'interrupted'
            try:
                os.unlink(target_dir+os.path.sep+filename)
            except:
                pass
            break
        count += 1
        print 'Done'
    else:
        if count == 0:
            print 'Could not download package index from %s' % pi_url
            sys.exit(1)
    print '%d/%d packages downloaded' % (count, len(download_queue))

# vim: sw=4 ts=8 sts=4 et bs=2 fdm=marker fileencoding=utf8
